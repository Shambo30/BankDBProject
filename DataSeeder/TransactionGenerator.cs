using DatabaseLib;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataSeeder
{
    public class TransactionGenerator
    {
        public static List<Transaction> GenerateDeposits(List<Account> accounts, int numDeposits) 
        {
            Random random = new Random();
            List<Transaction> deposits = new List<Transaction>();
            for(int i = 0; i < numDeposits; i++) 
            {
                var account = accounts[random.Next(accounts.Count)];
                int acctNum = account.account_number;
                double amount = random.Next(1, 10000);

                var deposit = new Transaction
                {
                    account_number = acctNum,
                    amount = amount
                    // timestamp not necessary at this step.
                    // transaction id is autogenerated
                };

                deposits.Add(deposit);
            }

            return deposits;
        }

        public static List<Transaction> GenerateWithdrawals(List<Account> accounts, int numDeposits)
        {
            Random random = new Random();
            List<Transaction> deposits = new List<Transaction>();
            for (int i = 0; i < numDeposits; i++)
            {
                var account = accounts[random.Next(accounts.Count)];
                int acctNum = account.account_number;
                double amount = random.Next(1, (int)Math.Floor(account.balance)); 
                // cannot withdraw more than the account's balance!!!
                // also needs to round down the limit to ensure this.

                var deposit = new Transaction
                {
                    account_number = acctNum,
                    amount = amount
                    // timestamp not necessary at this step.
                    // transaction id is autogenerated
                };

                deposits.Add(deposit);
            }

            return deposits;
        }
    }
}
