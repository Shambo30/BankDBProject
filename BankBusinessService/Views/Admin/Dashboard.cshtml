@{
    ViewData["Title"] = "Admin Dashboard";
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    @* Margin-top 5 (high spacing *@
    <div class="container mt-5">
        <h1>Admin Dashboard</h1>
        @* Margin-bottom 4 (high, but little bit less spacing) *@
        <div class="section mb-4">
            <h2>Admin Profile Information</h2>

            @* Full screen flex box; align items in it to the center *@
            <div class="d-flex align-items-center">
                <div>
                    <h3>Name: @Model.UserProfile.Name</h3>
                    <p>Email: <a href="mailto:@Model.UserProfile.Email">@Model.UserProfile.Email</a></p>
                    <p>Phone: @Model.UserProfile.Phone</p>
                    @* btn-primary provides the colour of the button *@
                    <button class="btn btn-primary">Update Personal Details</button>
                </div>
            </div>
        </div>

        <div class="section mb-4">
            <h2>User Management</h2>
            <div class="form-group">
                <label for="user-search">Search Users:</label>
                <input type="text" id="user-search" class="form-control" placeholder="Search by profile username...">
            </div>
            <button class="btn btn-success mb-3">Create User Profile</button>
            <table class="table table-bordered" id="allProfilesTable">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Address</th>
                        <th>Phone</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Javascript injects code here -->
                </tbody>
            </table>
        </div>

        <div class="section mb-4">
            <h2>Transaction Management</h2>
            <div class="form-group">
                <label for="transaction-search">Search Transactions:</label>
                <input type="text" id="transaction-search" class="form-control" placeholder="Search by ID...">
            </div>
            <table class="table table-bordered" id="allTransactionsTable">
                <thead>
                    <tr>
                        <th>Transaction ID</th>
                        <th>From Account ID</th>
                        <th>Date</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Javascript injects code here -->
                </tbody>
            </table>
        </div>

        <div class="section mb-4">
            <h2>Security and Access Control</h2>
            <p>Logs and audit trails for tracking admin activities and system changes will be displayed here.</p>
            <button class="btn btn-info">View Logs</button>
        </div>

        <div class="section mb-4">
            <h2>Logout</h2>
            <button class="btn btn-danger" onclick="logout()">Log Out</button>
        </div>


    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>

        $(document).ready(function () {
            updatePageContents()
        });

        function updatePageContents()
        {
            // clear existing tables (just in case)
            clearAllTables()
            // retrieve list of all profiles 
            retrieveProfilesList()
            // refresh list of all transactions
            retrieveTransactionsList()
        }

        function clearAllTables() {
            let profileTable = $('#allProfilesTable tbody');
            let transactionTable = $('#allTransactionsTable tbody');

            profileTable.empty();
            transactionTable.empty();
        }

        function retrieveProfilesList() {
            $.ajax({
                url: `/api/BProfile/all`,
                method: 'GET',
                success: function (data) {
                    displayProfiles(data);
                },
                error: function (error) {
                    console.error('Error fetching profile history:', error);
                }
            });
        }

        // Function to display profile history dynamically
        // <button class="btn btn-primary" onclick="editProfile('${profile.Username}')">Edit</button>
        function displayProfiles(profiles) {
            let profileTable = $('#allProfilesTable tbody');
            profileTable.empty();
            profiles.forEach(profile => {
                profileTable.append(`
                        <tr>
                            <td>${profile.username}</td>
                            <td>${profile.name}</td>
                            <td>${profile.email}</td>
                            <td>${profile.password}</td>
                            <td>${profile.address}</td>
                            <td>${profile.phone}</td>
                            <td>
                           
                                    <button class="btn btn-primary">Edit</button>
                                    <button class="btn btn-danger">Delete</button>
                            </td>
                        </tr>
                    `);
            });
        }

        function retrieveTransactionsList() {
            $.ajax({
                url: `/api/BTransaction/all`,
                method: 'GET',
                success: function (data) {
                    displayTransactions(data);
                },
                error: function (error) {
                    console.error('Error fetching transaction history:', error);
                }
            });
        }

        // Function to display transaction history dynamically
        function displayTransactions(transactions) {
            let transactionTable = $('#allTransactionsTable tbody');
            transactionTable.empty();
            transactions.forEach(transaction => {
                const formattedDate = new Date(transaction.transaction_date).toLocaleString(); // Formats the date to a more readable format

                const formattedAmount = new Intl.NumberFormat('en-AU', {
                    style: 'currency',
                    currency: 'AUD',
                }).format(transaction.amount);

                transactionTable.append(`
                    <tr>
                        <td>${transaction.transaction_id}</td>
                        <td>${transaction.account_number}</td>
                        <td>${formattedDate}</td>
                        <td>${formattedAmount}</td>
                    </tr>
                `);
            });
        }
        // Logout function
        function logout() {
            $.ajax({
                url: '/Login/AdminLogout',
                method: 'POST',
                success: function () {
                    window.location.href = '/Login/AdminLogin';
                    console.log('Logging out...')
                },
                error: function (error) {
                    alert('Error logging out: ', error);
                }
            });
        }
    </script>
</body>
